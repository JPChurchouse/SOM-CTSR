<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="NextTemp" Id="{22e1325d-e778-41e7-94d8-d75093f602a2}" SpecialFunc="None">
    <Declaration><![CDATA[
// CALCULATE THE NEXT TEMPURATURE OF THE LIQUID

FUNCTION NextTemp : REAL

VAR
	
	// // Heat in [J/s] // //
	a : REAL := const.rho * flow.in * const.cp;
	// kg/m3 * m3/s * J/kg/K -> J/s/K
	
	b : REAL := temp.in - temp.now;
	// K - K -> K
	
	Qin : REAL := a * b;
	// J/s/K * K -> J/s
	
	
	// // Heat from reaction [J/s]	// //
	
	Qre : REAL := GetReactRate() * GetVolume() * const.Hr;
	// mol/m3/s * m3 * J/mol -> J/s
	
	
	// // Heat conducted in from steam jacket [J/s] // //
	
	c   : REAL := const.Kwall * tank.D * PI * High.now;
	// J/s/K/m2 * m * m -> J/s/K
	
	d   : REAL := temp.wall  - temp.now;
	// K - K -> K
	
	Qco : REAL := c * d;
	// J/s/K * K -> J/s
	
	
	// // Support coefficients // //

	dtime : REAL := userin.time_step;
	// s
	
	mtcp  : REAL := const.rho * const.cp * GetVolume();
	// kg/m3 * J/kg/K * m3 -> J/K
	
	
	// // Delta [K] // //
	dtemp : REAL;
	// J/s * s / J/K -> K
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Throw error
IF mtcp <= 0 THEN
	nexttemp := 0;
	RETURN;
END_IF

dtemp := (Qin + Qre + Qco) * dtime / mtcp;
NextTemp := temp.now + dtemp;

]]></ST>
    </Implementation>
    <LineIds Name="NextTemp">
      <LineId Id="122" Count="3" />
      <LineId Id="119" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="120" Count="1" />
      <LineId Id="118" Count="0" />
      <LineId Id="61" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>